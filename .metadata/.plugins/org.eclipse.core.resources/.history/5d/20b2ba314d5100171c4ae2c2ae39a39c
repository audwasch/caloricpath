package com.caloricpath.server;

import com.rpc.shared.HandleChanged;
import com.rpc.shared.SplitString;
import com.rpc.shared.Trace;
import com.caloricpath.shared.SatFileClass;
import com.caloricpath.shared.SatFileStatus;

public class SatFileServer 
	extends SatFileClass 
{
	public final SatelliteFileSet TheFile = new SatelliteFileSet();
	private int m_InhibitRecalc=0;
	
	public SatFileServer(String name)
	{
		super(name);
		
		if(DEBUGGING)
			Trace.println("SatFileServer::SatFileServer(), name="+name);
		
		FileName.ChangedEvent.add(FileName_Changed);
		FileIndex.ChangedEvent.add(FileIndex_Changed);
		
		FileStatus.ChangedEvent.add(FileStatus_Changed);
		
		DataMaxCount.ChangedEvent.add(DataMaxCount_Changed);
		FocusCenter.ChangedEvent.add(FocusCenter_Changed);
		FocusMiles.ChangedEvent.add(FocusMiles_Changed);
		FocusDegrees.ChangedEvent.add(FocusDegrees_Changed);
		DataDimensions.ChangedEvent.add(DataDimensions_Changed);
	}
	
	private HandleChanged<SatFileStatus> FileStatus_Changed =
			new HandleChanged<SatFileStatus>() 
	{
		@Override
		public void Changed(SatFileStatus newValue) throws Exception
		{	
			if(DEBUGGING)
				Trace.println("SatFileClient::FileStatus_Changed=" + newValue.toString() );
		}
	};
	
	private HandleChanged<Integer> DataMaxCount_Changed = 
			new HandleChanged<Integer>()
	{
		@Override
		public void Changed(Integer newValue) throws Exception
		{
			if(DEBUGGING)
				Trace.println("SatFileServer::DataMaxCount_Changed(), newValue=" + newValue );
			
			try
			{
				DataDimensions.setValue( TheFile.getDataDimensions( DataMaxCount.getValue() ) );
			}
			catch(Exception e)
			{
				Trace.println("SatFileServer::DataMaxCount_Changed(), exception: " + e.getMessage());
				throw e;
			}
		}
	};
	
	private HandleChanged<Integer> FileIndex_Changed =
			new HandleChanged<Integer>()
	{
		@Override
		public void Changed(Integer newValue) throws Exception
		{
			try
			{
				if(DEBUGGING)
					Trace.println("SatFileServer::FileIndex_Changed(), newValue="+newValue);
				
				if(newValue != null && newValue.intValue() >= 0 && newValue.intValue() < FilesPresent.getValue().length)
				{
					String newName = FilesPresent.getValue()[newValue];
					if(!newName.equals(FileName.getValue()))
						FileName.setValue(newName);
				}
			}
			catch(Exception e)
			{
				Trace.println("SatFileServer::FileIndex_Changed, exception: e="+e.getMessage());
			}
		}
	};
	
	private HandleChanged<String> FileName_Changed = 
			new HandleChanged<String>()
	{
		@Override
		public void Changed(String newValue) throws Exception
		{
			if(DEBUGGING)
				Trace.println("SatFileServer::FileName_Changed(), newValue=[" + newValue +"]");
			
			try
			{
				m_InhibitRecalc++;
				try
				{
					FileStatus.getValue().clear();

					
//					FileSamples.setValue( FileSamples.getDefaultValue() );
//					FileLines.setValue( FileLines.getDefaultValue() );
//					FilePoints.setValue( FilePoints.getDefaultValue() );
//					FileCenter.setValue( FileCenter.getDefaultValue() );
//					FileDegrees.setValue(FileDegrees.getDefaultValue() );
//					FileMiles.setValue(FileMiles.getDefaultValue() );

					DataDimensions.setValue( DataDimensions.getDefaultValue() );
					Data.setValue(new Float[0]);
		
					TheFile.setFileName(newValue);
					
					FileStatus.getValue().setName(TheFile.getFileName());
					FileStatus.getValue().setLines(TheFile.getFileLines());
					FileStatus.getValue().setSamples(TheFile.getFileSamples());
					FileStatus.getValue().setCenter(TheFile.getFileCenter());
					FileStatus.getValue().setDegrees(TheFile.getFileDegrees());
					FileStatus.getValue().setMiles(TheFile.getFileMiles());
					FileStatus.getValue().setNSEWDegrees( new Double[] {
						TheFile.getFileNorthLat(), 
						TheFile.getFileSouthLat(),
						TheFile.getFileEastLong(), 
						TheFile.getFileWestLong()
						});
					FileStatus.AnnounceChanges();
					
//					FileLines.setValue(TheFile.getFileLines());
//					FilePoints.setValue(TheFile.getFilePoints());
//					FileSamples.setValue(TheFile.getFileSamples());
//					FileCenter.setValue(TheFile.getFileCenter());
//					FileDegrees.setValue(TheFile.getFileDegrees());
//					FileMiles.setValue(TheFile.getFileMiles());
//					FileNSEWDegrees.setValue(new Double[] {TheFile.getFileNorthLat(), TheFile.getFileSouthLat(),
//						TheFile.getFileEastLong(), TheFile.getFileWestLong()});
					
					
					
					FocusCenter.setValue(TheFile.getFileCenter());
					FocusDegrees.setValue(TheFile.getFileDegrees());
					FocusTopLeftColRow.setValue(TheFile.getFocusTopLeftColRow());
					FocusWidthHeightColRow.setValue(TheFile.getFocusWidthHeightColRow());
					
					if(DEBUGGING)
						Trace.println("Focus Miles getting set inside FileName change");
					FocusMiles.setValue(TheFile.getFileMiles());
					
				}
				finally
				{
					m_InhibitRecalc--;
				}

				DataDimensions.setValue( TheFile.getDataDimensions( DataMaxCount.getValue() ) );
			}
			catch(Exception e)
			{
				Trace.println("SatFileServer::FileName_Changed(), exception: " + e.getMessage());
				throw e;
			}
		}
	};
	
	private HandleChanged<Double[]> FocusCenter_Changed = 
			new HandleChanged<Double[]>()
	{
		@Override
		public void Changed(Double[] newValue) throws Exception
		{
			if(DEBUGGING)
			{
				String str=SplitString.formArrayValue(newValue);
				Trace.println("SatFileServer::FocusCenter_Changed(), newValue="+str);
			}

			if( newValue[0] > FileStatus.getValue().getNSEWDegrees()[0]) //north
			{
				if(DEBUGGING)
					Trace.println(newValue[0] + " is greater than " + FileStatus.getValue().getNSEWDegrees()[0]);
			}
			else if(newValue[0] < FileStatus.getValue().getNSEWDegrees()[1]) //south
			{
				if(DEBUGGING)
					Trace.println(newValue[0] + " is less than " + FileStatus.getValue().getNSEWDegrees()[1]);
			}
			else if(newValue[1] > FileStatus.getValue().getNSEWDegrees()[2]) //east
			{
				if(DEBUGGING)
					Trace.println(newValue[1] + " is less than " + FileStatus.getValue().getNSEWDegrees()[2]);
			}
			else if(newValue[1] < FileStatus.getValue().getNSEWDegrees()[3] )  //west
			{
				if(DEBUGGING)
					Trace.println(newValue[1] + " is greater than " + FileStatus.getValue().getNSEWDegrees()[3]);
			}
			else
			{			
				TheFile.setFocusCenter( newValue.clone() );
				DataDimensions.setValue( TheFile.getDataDimensions( DataMaxCount.getValue() ) );
			}
		}
	};
	
	private HandleChanged<Double[]> FocusMiles_Changed = 
			new HandleChanged<Double[]>()
	{
		@Override
		public void Changed(Double[] newValue) throws Exception
		{
			if(DEBUGGING)
			{
				String str=SplitString.formArrayValue(newValue);
				Trace.println("SatFileServer::FocusMiles_Changed="+str);
			}
			
			Double [] boundaries = FileStatus.getValue().getMiles();
			if(newValue[0] > boundaries[0] || newValue[1] > boundaries[1])
			{
				if(DEBUGGING)
					Trace.println("SatFocusServer::FocusMiles exceeds boundaries");
			}
			else
			{
				TheFile.setFocusMiles( newValue.clone() );
				FocusDegrees.setValue(TheFile.getFocusDegrees());
				DataDimensions.setValue( TheFile.getDataDimensions( DataMaxCount.getValue() ) );
			}
		}
	};
	
	private HandleChanged<Double[]> FocusDegrees_Changed = 
			new HandleChanged<Double[]>()
	{
		@Override
		public void Changed(Double[] newValue) throws Exception
		{
			if(DEBUGGING)
			{
				String str=SplitString.formArrayValue(newValue);
				Trace.println("SatFileServer::FocusDegrees_Changed(), newValue="+str);
			}
			
			Double [] boundaries = FileStatus.getValue().getDegrees();
			if(newValue[0] > boundaries[0] || newValue[1] > boundaries[1])
			{
				if(DEBUGGING)
					Trace.println("SatFocusServer::FocusDegrees exceeds boundaries");
			}
			else
			{
				TheFile.setFocusDegrees( newValue.clone() );
				DataDimensions.setValue( TheFile.getDataDimensions( DataMaxCount.getValue() ) );
			}
		}
	};
	
	private HandleChanged<Integer[]> DataDimensions_Changed = 
			new HandleChanged<Integer[]>()
	{
		@Override
		public void Changed(Integer[] newValue) throws Exception
		{
			if(DEBUGGING)
			{
				String str=SplitString.formArrayValue(newValue);
				Trace.println("SatFileServer::DataDimensions_Changed="+str);
			}
			
			if( m_InhibitRecalc==0 )
			{
				Float[] temp = TheFile.getData(DataMaxCount.getValue());
				Data.setValue( temp );
			}
		}
	};
}
